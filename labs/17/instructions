Declare and implement a class that provides the following interface EXACTLY.
You will create 2 new files, sl_node.h and sl_node.cpp

class name: SLNode

private data members:

	next_node_, SLNode* that points to the next node in a singly-linked list
	contents_, int used to store the data contents of this SLNode

public function interface:

	default constructor, sets values next_node_(NULL) and contents_(0)
	overloaded constructor, int parameter assigned to contents_
	
	empty destructor
	
	void set_contents (int)
	int contents() const
	
	void set_next_node(SLNode*)
	
	SLNode* next_node() const

A Makefile has been included with this exercise. Your options are:
make (Tries to compile your exercise)
make style (Checks your file for some styling mistakes. Note this does not check
            variable / function names / all indentation)
make clean (Removes the executable)

Please note you need to follow programming style guidelines for this exercise.

Exercises having the following will lose 10% per category:
- Code (such as output statements) not explicitly required
- Bad Programming Style (Variable Names, Formatting)

Exercises that DO NOT COMPILE will receive a ZERO!

NOTE: Exercises that compile with warnings will be treated as if they did not
      compile. (i.e. they will receive a zero)
